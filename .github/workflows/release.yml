name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (patch, minor, major, or specific version)"
        required: true
        default: "patch"

jobs:
  build-native:
    name: Build native binaries (${{ matrix.settings.target }})
    runs-on: ${{ matrix.settings.os }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}

      - name: Setup cross-compilation for macOS
        if: matrix.settings.target == 'aarch64-apple-darwin'
        run: |
          sudo softwareupdate --install-rosetta --agree-to-license

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build native binary
        run: pnpm build:native --target ${{ matrix.settings.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.settings.target }}
          path: native/*.node

  release:
    needs: build-native
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move binaries to proper location
        run: |
          mkdir -p native
          find artifacts -name "*.node" -exec cp {} native/ \;

      - name: Build TypeScript
        run: pnpm build

      - name: Version and Release
        run: |
          VERSION=${{ github.event.inputs.version }}
          if [ "$VERSION" = "patch" ] || [ "$VERSION" = "minor" ] || [ "$VERSION" = "major" ]; then
            npm version $VERSION
          else
            npm version $VERSION --no-git-tag-version
          fi
          git push --follow-tags

      - name: Publish to npm
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          RELEASE_MODE: true
